package survey.model;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

import survey.model.security.Right;
import survey.model.security.Role;

/**
 * 用户类
 */
@Entity
@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
public class User extends BaseEntity{
	private static final long serialVersionUID = 2334149116998677750L;
	@Id
	@GeneratedValue
	private Integer id;
	private String email;
	private String password;
	private String nickName;
	//注册时间
	@Temporal(value=TemporalType.TIMESTAMP)
	@Column(updatable = false)
	private Date regDate;
	
	//权限总和
	private long[] rightSum;
	//是否是超级管理员
	private boolean superAdmin;

	//角色集合
	@ManyToMany
	@JoinTable(name = "user_role", joinColumns =	{@JoinColumn(name = "user_id") },
		inverseJoinColumns = { @JoinColumn(name= "role_id")}	)		//中间表配置
	private Set<Role> roles = new HashSet<Role>();
	
	public Integer getId() {
		return id;
	}
	
	public Date getRegDate() {
		return regDate;
	}

	public void setRegDate(Date regDate) {
		this.regDate = regDate;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public String getNickName() {
		return nickName;
	}

	public void setNickName(String nickName) {
		this.nickName = nickName;
	}

	public void setRoles(Set<Role> roles) {
		this.roles = roles;
	}

	public Set<Role> getRoles() {
		return roles;
	}

	public void setRightSum(long[] rightSum) {
		this.rightSum = rightSum;
	}

	public long[] getRightSum() {
		return rightSum;
	}

	public void setSuperAdmin(boolean superAdmin) {
		this.superAdmin = superAdmin;
	}

	public boolean isSuperAdmin() {
		return superAdmin;
	}

	/*
	 * 判断用户是否具有权限
	 */
	public boolean hasRight(Right r){
		if(rightSum == null){
			return false;
		}
		else{
			int pos = r.getRightPos();
			long code = r.getRightCode();
			return !((rightSum[pos] & code) == 0 );
		}
	}
}
